@startuml
set separator none
title Cart - Dynamic

skinparam {
  arrowFontSize 10
  defaultTextAlignment center
  wrapWidth 200
  maxMessageSize 100
}

hide stereotype

skinparam sequenceParticipant<<Cart.CartDatabase>> {
  BackgroundColor #8e44ad
  FontColor #ffffff
  BorderColor #632f79
  shadowing false
}
skinparam sequenceParticipant<<Cart.CartMicroservice>> {
  BackgroundColor #27ae60
  FontColor #ffffff
  BorderColor #1b7943
  shadowing false
}
skinparam sequenceParticipant<<Finance.FinanceMicroservice>> {
  BackgroundColor #27ae60
  FontColor #ffffff
  BorderColor #1b7943
  shadowing false
}
skinparam sequenceParticipant<<Shelf.ShelfMicroservice>> {
  BackgroundColor #27ae60
  FontColor #ffffff
  BorderColor #1b7943
  shadowing false
}

participant "Cart Microservice\n<size:10>[Container: Java and Spring Boot]</size>" as Cart.CartMicroservice <<Cart.CartMicroservice>> #27ae60
participant "Finance Microservice\n<size:10>[Container: Java and Spring Boot]</size>" as Finance.FinanceMicroservice <<Finance.FinanceMicroservice>> #27ae60
database "Cart Database\n<size:10>[Container: MongoDB]</size>" as Cart.CartDatabase <<Cart.CartDatabase>> #8e44ad
participant "Shelf Microservice\n<size:10>[Container: Java and Spring Boot]</size>" as Shelf.ShelfMicroservice <<Shelf.ShelfMicroservice>> #27ae60
Cart.CartMicroservice <-[#2980b9]- Finance.FinanceMicroservice : Notifies of completed payment
Cart.CartMicroservice -[#2980b9]> Finance.FinanceMicroservice : Acknowledges payment
Cart.CartMicroservice -[#2980b9]> Cart.CartDatabase : Marks cart as paid
Cart.CartMicroservice <-[#2980b9]- Cart.CartDatabase : Confirms payment status
Cart.CartMicroservice -[#2980b9]> Shelf.ShelfMicroservice : Updates borrowed items
Cart.CartMicroservice <-[#2980b9]- Shelf.ShelfMicroservice : Acknowledges update
@enduml