@startuml
set separator none
title Shelf - Dynamic

skinparam {
  arrowFontSize 10
  defaultTextAlignment center
  wrapWidth 200
  maxMessageSize 100
}

hide stereotype

skinparam sequenceParticipant<<Cart.CartMicroservice>> {
  BackgroundColor #26a69a
  FontColor #ffffff
  BorderColor #1a746b
  shadowing false
}
skinparam sequenceParticipant<<Shelf.ShelfDatabase>> {
  BackgroundColor #26a69a
  FontColor #ffffff
  BorderColor #1a746b
  shadowing false
}
skinparam sequenceParticipant<<Shelf.ShelfMicroservice>> {
  BackgroundColor #26a69a
  FontColor #ffffff
  BorderColor #1a746b
  shadowing false
}

participant "Cart Microservice\n<size:10>[Container: Java and Spring Boot]</size>" as Cart.CartMicroservice <<Cart.CartMicroservice>> #26a69a
participant "Shelf Microservice\n<size:10>[Container: Java and Spring Boot]</size>" as Shelf.ShelfMicroservice <<Shelf.ShelfMicroservice>> #26a69a
database "Shelf Database\n<size:10>[Container: MongoDB]</size>" as Shelf.ShelfDatabase <<Shelf.ShelfDatabase>> #26a69a
Cart.CartMicroservice -[#004d40]> Shelf.ShelfMicroservice : Notifies borrowed items
Cart.CartMicroservice <-[#004d40]- Shelf.ShelfMicroservice : Acknowledges receipt of items
Shelf.ShelfMicroservice -[#004d40]> Shelf.ShelfDatabase : Stores borrowed items
Shelf.ShelfMicroservice <-[#004d40]- Shelf.ShelfDatabase : Confirms storage
@enduml