@startuml
set separator none
title Finance - Dynamic

skinparam {
  arrowFontSize 10
  defaultTextAlignment center
  wrapWidth 200
  maxMessageSize 100
}

hide stereotype

skinparam sequenceParticipant<<Administrator>> {
  BackgroundColor #00796b
  FontColor #ffffff
  BorderColor #00544a
  shadowing false
}
skinparam sequenceParticipant<<Finance.FinanceDatabase>> {
  BackgroundColor #26a69a
  FontColor #ffffff
  BorderColor #1a746b
  shadowing false
}
skinparam sequenceParticipant<<Finance.FinanceMicroservice>> {
  BackgroundColor #26a69a
  FontColor #ffffff
  BorderColor #1a746b
  shadowing false
}
skinparam sequenceParticipant<<Finance.FinanceSPA>> {
  BackgroundColor #26a69a
  FontColor #ffffff
  BorderColor #1a746b
  shadowing false
}

actor "Administrator\n<size:10>[Person]</size>" as Administrator <<Administrator>> #00796b
participant "Finance SPA\n<size:10>[Container: React Component]</size>" as Finance.FinanceSPA <<Finance.FinanceSPA>> #26a69a
participant "Finance Microservice\n<size:10>[Container: Java and Spring Boot]</size>" as Finance.FinanceMicroservice <<Finance.FinanceMicroservice>> #26a69a
database "Finance Database\n<size:10>[Container: PostgreSQL]</size>" as Finance.FinanceDatabase <<Finance.FinanceDatabase>> #26a69a
Administrator -[#004d40]> Finance.FinanceSPA : Reviews financial transactions
Finance.FinanceSPA -[#004d40]> Finance.FinanceMicroservice : Requests transaction data
Finance.FinanceMicroservice -[#004d40]> Finance.FinanceDatabase : Retrieves transactions
Finance.FinanceMicroservice <-[#004d40]- Finance.FinanceDatabase : Returns transaction data
Finance.FinanceSPA <-[#004d40]- Finance.FinanceMicroservice : Provides transaction data
Administrator <-[#004d40]- Finance.FinanceSPA : Displays transaction overview
@enduml